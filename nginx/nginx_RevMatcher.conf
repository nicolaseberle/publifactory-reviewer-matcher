upstream flask_api {
  server web:5000;
}

server {
  listen 80;
  listen [::]:80;
  server_name service.publifactory.co;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$server_name$request_uri;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  add_header 'Access-Control-Allow-Origin' $http_origin always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, PATCH';
  add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
  add_header 'Access-Control-Max-Age' 1728000;
  add_header Strict-Transport-Security "max-age=63072000" always;

  gzip on;
  gzip_proxied any;
  gzip_http_version 1.1;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_vary on;
  gzip_types text/css text/javascript text/xml text/plain application/javascript application/x-javascript application/json;

  ssl_certificate /etc/letsencrypt/live/service.publifactory.co/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/service.publifactory.co/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  server_name service.publifactory.co;

  root /usr/share/nginx/html;

  index index.html;

  location ~ /api {
    proxy_pass http://flask_api;
    proxy_redirect off;

    include fastcgi_params;
    fastcgi_send_timeout 1200;
    fastcgi_read_timeout 1200;

    proxy_connect_timeout 1200;
    proxy_send_timeout 1200;
    proxy_read_timeout 1200;
    send_timeout 1200;

    proxy_set_header Host $host;
    proxy_set_header Access-Control-Allow-Origin "*";
    proxy_set_header Access-Control-Allow-Headers "Origin, X-Requested-With,       Content-Type, Accept";
    proxy_set_header Access-Control-Allow-Methods "GET, POST, DELETE, PUT, PATCH";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $server_name;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_hide_header Content-Type;

  }

  location / {
    try_files $uri $uri/ @rewrites;
  }

  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

}